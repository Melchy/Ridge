using Ridge.Setup;
using Xunit.Abstractions;

namespace Ridge.LogWriter;

/// <summary>
///     Ridge logging options extensions.
/// </summary>
public static class RidgeOptionsLoggingExtensions
{
    /// <summary>
    ///     Use Nunit logger which uses TestContext.Out.WriteLine. See
    ///     https://docs.nunit.org/articles/nunit/writing-tests/TestContext.html#out.
    /// </summary>
    /// <param name="ridgeOptions">Options to edit.</param>
    /// <returns></returns>
    public static RidgeOptions UseNunitLogWriter(
        this RidgeOptions ridgeOptions)
    {
        ridgeOptions.LogWriter = new NunitLogWriter();
        return ridgeOptions;
    }

    /// <summary>
    ///     Use XUnit logger which will be used to log requests and responses generated by ridge.
    ///     To read more about <see cref="ITestOutputHelper" /> see documentation https://xunit.net/docs/capturing-output.
    /// </summary>
    /// <param name="ridgeOptions">Options to edit.</param>
    /// <param name="outputTestHelper"><see cref="ITestOutputHelper" /> used to write logs.</param>
    /// <returns></returns>
    public static RidgeOptions UseXunitLogWriter(
        this RidgeOptions ridgeOptions,
        ITestOutputHelper outputTestHelper)
    {
        ridgeOptions.LogWriter = new XunitLogWriter(outputTestHelper);
        return ridgeOptions;
    }

    /// <summary>
    ///     Use custom log writer.
    /// </summary>
    /// <param name="ridgeOptions">Options to edit.</param>
    /// <param name="logWriter">Log writer to use.</param>
    /// <returns></returns>
    public static RidgeOptions UseCustomLogWriter(
        this RidgeOptions ridgeOptions,
        ILogWriter logWriter)
    {
        ridgeOptions.LogWriter = logWriter;
        return ridgeOptions;
    }
}
